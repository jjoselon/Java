package com.gamesmall.quienquieresermillonariojavaswing;

import com.gamesmall.daos.PreguntaDaoSinHibernate;
import static com.gamesmall.quienquieresermillonariojavaswing.Program.connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

public class Window extends javax.swing.JFrame {

    private int numeroPreguntaActual = 1;
    private float valorPreguntaActual;
    private int respuestaCorrecta;
    private float dineroTotalGanado = 0;
    private ResultSet pregunta = null;
    private java.sql.Connection conn = connection.getConnection();

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        try {
            configuring();
        } catch (SQLException ex) {

        }
    }

    private void configuring() throws SQLException {

        Statement st = conn.createStatement();
        PreguntaDaoSinHibernate pdsh = new PreguntaDaoSinHibernate();
        pregunta = pdsh.obtenerPorId(numeroPreguntaActual);

        while (pregunta.next()) {
            valorPreguntaActual = pregunta.getInt("ValorPregunta");
            enunciado.setText(pregunta.getString("EnunciadoPregunta"));
            ResultSet rs = st.executeQuery(
                    "SELECT r.*, p.* FROM pregunta AS p"
                    + " INNER JOIN respuesta AS r"
                    + " ON r.pregunta_idpregunta = p.idpregunta"
                    + " WHERE p.idpregunta = " + pregunta.getInt("idpregunta")
            );

            if (rs.next()) {
                primeraRespuesta.setText(rs.getInt("OrdenRespuesta") + ". " + rs.getString("DescripcionRespuesta"));
                primeraRespuesta.putClientProperty("Id", rs.getInt("OrdenRespuesta"));
                if (rs.getBoolean("EsCorrecta")) {
                    respuestaCorrecta = rs.getInt("OrdenRespuesta");
                }
            }
            
            if (rs.next()) {
                segundaRespuesta.setText(rs.getInt("OrdenRespuesta") + ". " + rs.getString("DescripcionRespuesta"));
                segundaRespuesta.putClientProperty("Id", rs.getInt("OrdenRespuesta"));
                if (rs.getBoolean("EsCorrecta")) {
                    respuestaCorrecta = rs.getInt("OrdenRespuesta");
                }
            }
            if (rs.next()) {
                terceraRespuesta.setText(rs.getInt("OrdenRespuesta") + ". " + rs.getString("DescripcionRespuesta"));
                terceraRespuesta.putClientProperty("Id", rs.getInt("OrdenRespuesta"));;
                if (rs.getBoolean("EsCorrecta")) {
                    respuestaCorrecta = rs.getInt("OrdenRespuesta");
                }
            }
            if (rs.next()) {
                cuartaRespuesta.setText(rs.getInt("OrdenRespuesta") + ". " + rs.getString("DescripcionRespuesta"));
                cuartaRespuesta.putClientProperty("Id", rs.getInt("OrdenRespuesta"));
                if (rs.getBoolean("EsCorrecta")) {
                    respuestaCorrecta = rs.getInt("OrdenRespuesta");
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enunciado = new javax.swing.JLabel();
        primeraRespuesta = new javax.swing.JButton();
        segundaRespuesta = new javax.swing.JButton();
        terceraRespuesta = new javax.swing.JButton();
        cuartaRespuesta = new javax.swing.JButton();
        txtDineroTotalGanado = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        primeraRespuesta.setText("-");
        primeraRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeraRespuestaActionPerformed(evt);
            }
        });

        segundaRespuesta.setText("-");
        segundaRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segundaRespuestaActionPerformed(evt);
            }
        });

        terceraRespuesta.setText("-");
        terceraRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terceraRespuestaActionPerformed(evt);
            }
        });

        cuartaRespuesta.setText("-");
        cuartaRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuartaRespuestaActionPerformed(evt);
            }
        });

        txtDineroTotalGanado.setText("00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(enunciado))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(primeraRespuesta)
                            .addComponent(terceraRespuesta))
                        .addGap(255, 255, 255)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(segundaRespuesta)
                            .addComponent(cuartaRespuesta)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtDineroTotalGanado, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(enunciado)
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(primeraRespuesta)
                    .addComponent(segundaRespuesta))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(terceraRespuesta)
                    .addComponent(cuartaRespuesta))
                .addGap(97, 97, 97)
                .addComponent(txtDineroTotalGanado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void primeraRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeraRespuestaActionPerformed
        int respuesta = (Integer) primeraRespuesta.getClientProperty("Id");
        if (respuesta == respuestaCorrecta) {
            numeroPreguntaActual++;
            try {
                // es necesario que este aqui debido a que también retorna una exception si la columna no existe
                dineroTotalGanado += valorPreguntaActual;
                txtDineroTotalGanado.setText("" + dineroTotalGanado);
                configuring();
            } catch (SQLException ex) {
                System.out.println("e" + ex.getMessage());
            }
        } else {

        }
    }//GEN-LAST:event_primeraRespuestaActionPerformed

    private void segundaRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segundaRespuestaActionPerformed
        int respuesta = (Integer) segundaRespuesta.getClientProperty("Id");
        if (respuesta == respuestaCorrecta) {
            numeroPreguntaActual++;
            try {
                // es necesario que este aqui debido a que también retorna una exception si la columna no existe
                dineroTotalGanado += valorPreguntaActual;
                txtDineroTotalGanado.setText("" + dineroTotalGanado);
                configuring();
            } catch (SQLException ex) {
                System.out.println("e" + ex.getMessage());
            }
        } else {

        }
    }//GEN-LAST:event_segundaRespuestaActionPerformed

    private void terceraRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terceraRespuestaActionPerformed
        int respuesta = (Integer) terceraRespuesta.getClientProperty("Id");
        if (respuesta == respuestaCorrecta) {
            numeroPreguntaActual++;
            try {
                // es necesario que este aqui debido a que también retorna una exception si la columna no existe
                dineroTotalGanado += valorPreguntaActual;
                txtDineroTotalGanado.setText("" + dineroTotalGanado);
                configuring();
            } catch (SQLException ex) {
                System.out.println("exception = " + ex.getMessage());
                System.out.println("exception = " + ex.getSQLState());
            }
        } else {

        }
    }//GEN-LAST:event_terceraRespuestaActionPerformed

    private void cuartaRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuartaRespuestaActionPerformed
        int respuesta = (Integer) cuartaRespuesta.getClientProperty("Id");
        if (respuesta == respuestaCorrecta) {
            numeroPreguntaActual++;
            try {
                // es necesario que este aqui debido a que también retorna una exception si la columna no existe
                dineroTotalGanado += valorPreguntaActual;
                txtDineroTotalGanado.setText("" + dineroTotalGanado);
                configuring();
            } catch (SQLException ex) {
                System.out.println("e" + ex.getMessage());
            }
        } else {

        }
    }//GEN-LAST:event_cuartaRespuestaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cuartaRespuesta;
    private javax.swing.JLabel enunciado;
    private javax.swing.JButton primeraRespuesta;
    private javax.swing.JButton segundaRespuesta;
    private javax.swing.JButton terceraRespuesta;
    private javax.swing.JTextField txtDineroTotalGanado;
    // End of variables declaration//GEN-END:variables
}
